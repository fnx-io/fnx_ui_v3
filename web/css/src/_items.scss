@use 'vars';

@mixin renderCharRules() {
  display: inline-block;
  width: vars.$bigSize;
  min-height: vars.$bigSize;
  line-height: vars.$bigSize;
  text-align: center;
}

@mixin renderCharWithBorderRules() {
  display: inline-block;
  width: vars.$bigSize;
  min-height: vars.$bigSize;
  line-height: vars.$bigSize_withoutBorder;
  text-align: center;
  border-radius: vars.$borderRadius;
}

@mixin renderItemRules() {
  display: inline-block;
  position: relative;
  margin: 0;
  padding: vars.$smallSize vars.$smallSize;
  min-height: vars.$bigSize;
  vertical-align: bottom;
  &.border {
      padding: vars.$smallSize_withoutBorder vars.$smallSize_withoutBorder;
      min-height: vars.$bigSize;
      border-radius: vars.$borderRadius;
  }
  /*
  & > a {
    &:only-child {
      display: inline-block;
      margin: calc(-1 * #{vars.$smallSize}) calc(-1 * -#{vars.$mediumSize});
      padding: vars.$smallSize vars.$mediumSize;
    }
  }
  */
}

@mixin render($prefix) {

  [data-prefix] {
    position: relative;
    padding-left: vars.$bigSize !important;
    @include renderItemRules();
    &:before {
      position: absolute;
      top:0;
      left:0;
      content: attr(data-prefix);
      @include renderCharRules();
    }
  }
  [data-suffix] {
    position: relative;
    padding-right: vars.$bigSize !important;
    @include renderItemRules();
    &:after {
      position: absolute;
      top:0;
      right:0;
      content: attr(data-suffix);
      @include renderCharRules();
    }
  }
  .#{$prefix}char {
    @include renderCharRules();
  }
  [class*=border].#{$prefix}char {
    @include renderCharWithBorderRules();
  }
  .#{$prefix}item {
    @include renderItemRules();
  }
}
/*

.renderItemIcons() {

}

.renderItem() {
  position: relative;
  margin: 0;
  padding: @basicWidgetPadding @padding;
  min-height: @basicWidgetSize;
& > a {
  &:only-child {
    .renderItemIcons();
    margin: -@basicWidgetPadding -@padding;
    padding: @basicWidgetPadding @padding;
    display: block;
  }
}
}
.item {
  .renderItem();
}
.item--border {
  margin: 0;
  padding: @borderedWidgetPadding;
  border: @borderSize solid @colorBorderDefault;
  border-radius: @borderRadius;
}
.char {
  display: inline-block;
  width: @basicWidgetSize;
  line-height: @basicWidgetSize;
  text-align: center;
}

.item, .item--border {
  .renderItemIcons();
}
 */